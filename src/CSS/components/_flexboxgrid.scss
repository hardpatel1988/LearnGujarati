//
// -- Start editing -- //
//

@import "../mixin/flex";

// Set the number of columns you want to use on your layout.
$flexboxgrid-grid-columns: 12 !default;
// Set the gutter between columns.
$flexboxgrid-gutter-width: 24px !default;
// Set a margin for the container sides.
$flexboxgrid-outer-margin: 2rem !default;
// Create or remove breakpoints for your project
// Syntax:
// name SIZErem,
$flexboxgrid-breakpoints:
  sm 48em 46rem, // >768 to 1023
  md 64em 61rem, // > 1024 to 1199
  lg 75em 71rem !default; // >1200px
$flexboxgrid-max-width: 1200px !default;
$flexboxgrid-grid-classes-prefix: "" !default;

//
// -- Stop editing -- //
//

$gutter-compensation: $flexboxgrid-gutter-width * .5 * -1;
$half-gutter-width: $flexboxgrid-gutter-width * .5;

.#{$flexboxgrid-grid-classes-prefix}wrapper {
  box-sizing: border-box;
  max-width: $flexboxgrid-max-width;
  margin: 0 auto;
}

.#{$flexboxgrid-grid-classes-prefix}container-fluid {
  margin-right: auto;
  margin-left: auto;
  padding-right: $flexboxgrid-outer-margin;
  padding-left: $flexboxgrid-outer-margin;
}

.#{$flexboxgrid-grid-classes-prefix}row {
  box-sizing: border-box;
  @include flexbox();
  @include flex(0, 1, auto);
  @include flex-direction(row);
  @include flex-wrap(wrap);
  margin-right: $gutter-compensation;
  margin-left: $gutter-compensation;
  >*{
    padding-right: $half-gutter-width;
     padding-left: $half-gutter-width;
     width: 100%;
     max-width: 100%;
  }
  &.no-gutter{
    margin: 0;
    >*{
      padding-left: 0;
      padding-right: 0
    }
  }
}

.#{$flexboxgrid-grid-classes-prefix}row.reverse {
  @include flex-direction(row-reverse);
}

.#{$flexboxgrid-grid-classes-prefix}col.reverse {
  @include flex-direction(column-reverse);
}

@mixin flexboxgrid-sass-col-common {
  box-sizing: border-box;

  // split @include flex(0, 0, auto) into individual props
  @include flex-grow(0);
  @include flex-shrink(0);

  // we leave @include flex-basis(auto) out of common because
  // in some spots we need it and some we dont
  // more why here: https://github.com/kristoferjoseph/flexboxgrid/issues/126

  padding-right: $half-gutter-width;
  padding-left: $half-gutter-width;
}

$name: xs;
.#{$flexboxgrid-grid-classes-prefix}col-#{$name} {
  @include flexboxgrid-sass-col-common;
  @include flex-basis(auto);
}
@for $i from 1 through $flexboxgrid-grid-columns {
  .#{$flexboxgrid-grid-classes-prefix}col-#{$name}-#{$i} {
    @include flexboxgrid-sass-col-common;
    @include flex-basis(100% / $flexboxgrid-grid-columns * $i);
    max-width: 100% / $flexboxgrid-grid-columns * $i;
  }
}
@for $i from 0 through $flexboxgrid-grid-columns {
  .#{$flexboxgrid-grid-classes-prefix}col-#{$name}-offset-#{$i} {
    @include flexboxgrid-sass-col-common;
    @if $i == 0 {
      margin-left: 0;
    } @else {
      margin-left: 100% / $flexboxgrid-grid-columns * $i;
    }
  }
}
.#{$flexboxgrid-grid-classes-prefix}col-#{$name} {
  @include flex-grow(1);
  @include flex-basis(0);
  max-width: 100%;
}
.#{$flexboxgrid-grid-classes-prefix}start-#{$name} {
  @include justify-content(flex-start);
  text-align: left;
}

.#{$flexboxgrid-grid-classes-prefix}center-#{$name} {
  @include justify-content(center);
  text-align: center;
}

.#{$flexboxgrid-grid-classes-prefix}end-#{$name} {
  @include justify-content(flex-end);
  text-align: right;
}

.#{$flexboxgrid-grid-classes-prefix}top-#{$name} {
  @include align-items(flex-start);
}

.#{$flexboxgrid-grid-classes-prefix}middle-#{$name} {
  @include align-items(center);
}

.#{$flexboxgrid-grid-classes-prefix}bottom-#{$name} {
  @include align-items(flex-end);
}

.#{$flexboxgrid-grid-classes-prefix}around-#{$name} {
  @include justify-content(space-around);
}

.#{$flexboxgrid-grid-classes-prefix}between-#{$name} {
  @include justify-content(space-between);
}

.#{$flexboxgrid-grid-classes-prefix}first-#{$name} {
  order: -1;
}

.#{$flexboxgrid-grid-classes-prefix}last-#{$name} {
  order: 1;
}


@each $breakpoint in $flexboxgrid-breakpoints {
  $name: nth($breakpoint, 1);
  $size: nth($breakpoint, 2);
  $container: nth($breakpoint, 3);
  @media only screen and (min-width: $size) {
    .#{$flexboxgrid-grid-classes-prefix}container {
      width: $container;
    }

    .col-#{$name} {
      @include flexboxgrid-sass-col-common;
      @include flex-basis(auto);
    }
    @for $i from 1 through $flexboxgrid-grid-columns {
      .#{$flexboxgrid-grid-classes-prefix}col-#{$name}-#{$i} {
        @include flexboxgrid-sass-col-common;
        @include flex-basis(100% / $flexboxgrid-grid-columns * $i);
        max-width: 100% / $flexboxgrid-grid-columns * $i;
      }
    }
    @for $i from 0 through $flexboxgrid-grid-columns {
      .#{$flexboxgrid-grid-classes-prefix}col-#{$name}-offset-#{$i} {
        @include flexboxgrid-sass-col-common;
        @if $i == 0 {
          margin-left: 0;
        } @else {
          margin-left: 100% / $flexboxgrid-grid-columns * $i;
        }
      }
    }
    .#{$flexboxgrid-grid-classes-prefix}col-#{$name} {
      @include flex-grow(1);
      @include flex-basis(0);
      max-width: 100%;
    }
    .#{$flexboxgrid-grid-classes-prefix}start-#{$name} {
      @include justify-content(flex-start);
      text-align: left;
    }

    .#{$flexboxgrid-grid-classes-prefix}center-#{$name} {
      @include justify-content(center);
      text-align: center;
    }

    .#{$flexboxgrid-grid-classes-prefix}end-#{$name} {
      @include justify-content(flex-end);
      text-align: right;
    }

    .#{$flexboxgrid-grid-classes-prefix}top-#{$name} {
      @include align-items(flex-start);
    }

    .#{$flexboxgrid-grid-classes-prefix}middle-#{$name} {
      @include align-items(center);
    }

    .#{$flexboxgrid-grid-classes-prefix}bottom-#{$name} {
      @include align-items(flex-end);
    }

    .#{$flexboxgrid-grid-classes-prefix}around-#{$name} {
      @include justify-content(space-around);
    }

    .#{$flexboxgrid-grid-classes-prefix}between-#{$name} {
      @include justify-content(space-between);
    }

    .#{$flexboxgrid-grid-classes-prefix}first-#{$name} {
      order: -1;
    }

    .#{$flexboxgrid-grid-classes-prefix}last-#{$name} {
      order: 1;
    }
  }
}